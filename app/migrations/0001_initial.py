# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-08-22 18:35
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('announcement_description', models.TextField()),
                ('announcement_date_created', models.DateTimeField(verbose_name=b'date announcement created')),
                ('announcement_last_modified', models.DateTimeField(verbose_name=b'date announcement last modified')),
                ('announcement_date_end', models.DateTimeField(verbose_name=b'date annoucement removed')),
            ],
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('board_name', models.CharField(max_length=30)),
                ('board_private', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Bug',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Email_Token',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(max_length=50)),
                ('expiration_date', models.DateTimeField(verbose_name=b'token expiration date')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Board')),
            ],
        ),
        migrations.CreateModel(
            name='Feature_Request',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_title', models.CharField(max_length=50)),
                ('feedback_description', models.TextField()),
                ('feedback_date_created', models.DateTimeField(verbose_name=b'date feedback created')),
                ('feedback_last_modified', models.DateTimeField(verbose_name=b'date feedback last modified')),
                ('feedback_file', models.FileField(blank=True, upload_to=b'')),
                ('feedback_upvotes', models.IntegerField(default=0)),
                ('feedback_downvotes', models.IntegerField(default=0)),
                ('feedback_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Board')),
            ],
            options={
                'verbose_name': 'feedback',
                'verbose_name_plural': 'feedbacks',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file_date_uploaded', models.DateTimeField(verbose_name=b'date file uploaded')),
                ('file_name', models.TextField()),
                ('file_description', models.TextField()),
                ('file_file', models.FileField(upload_to=b'')),
                ('file_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Board')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('organization_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('boards', models.ManyToManyField(blank=True, related_name='profile_boards', to='app.Board')),
                ('invites', models.ManyToManyField(blank=True, related_name='profile_invites', to='app.Board')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=30)),
                ('status_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Board')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subscription_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Feedback')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=30)),
                ('feedback', models.ManyToManyField(to='app.Feedback')),
                ('tag_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Board')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('vote_type', models.IntegerField()),
                ('vote_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Feedback')),
                ('vote_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='subscription',
            name='subscription_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Tag'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='subscription_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Profile'),
        ),
        migrations.AddField(
            model_name='file',
            name='file_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Profile'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='feedback_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Status'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='feedback_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Profile'),
        ),
        migrations.AddField(
            model_name='feature_request',
            name='feature_request_feedback',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Feedback'),
        ),
        migrations.AddField(
            model_name='feature_request',
            name='feature_request_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Status'),
        ),
        migrations.AddField(
            model_name='discussion',
            name='discussion_feedback',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Feedback'),
        ),
        migrations.AddField(
            model_name='discussion',
            name='discussion_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Status'),
        ),
        migrations.AddField(
            model_name='bug',
            name='bug_feedback',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Feedback'),
        ),
        migrations.AddField(
            model_name='bug',
            name='bug_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Status'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='announcement_board',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Board'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='announcement_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Profile'),
        ),
    ]
